代码版本控制

代码备份不仅要备份到本地，还要备份到云端

1.明确提交代码的人
2.明确提交代码的时间


（代码备份，版本控制，协同工作，责任追溯）
git与svn
svn是集中式版本控制系统，版本库集中放在中央服务器，开发时需要从服务器下载最新版本，开发后，再提交到中央服务器
git分为本地仓库和远程仓库，

官网下载
git gui here//图形化界面（tortoisegit第三方的{官网下载，还有中文安装包}）
git bash here//命令行界面

git操作入门
~~本地仓库          代码-> 暂存区index（代码提交仓库之前的临时存储空间）本地历史仓库Repository（存放不同版本的代码）   工作目录working tree（代码存放位置）    
~~远程仓库



git 常用命令
git init初始化，创建git仓库
git status 查看git状态（文件是否进行了添加、提交操作）
git add 添加。将指定文件添加到暂存区
git commit 提交，将暂存区文件提交到历史仓库
git log 查看日志（git提交的历史日志）
git reflog 可以查看所有分支的所有操作记录（包括已经删除的commit记录的操作）
git reset --hard 版本唯一索引值，回退版本



git版本管理

分支管理介绍
分支：由每次提交的代码，串成的一条时间线
使用场景：1周期较长的模块开发
	 2尝试性的模块开发

分支的工作流程
Master(指向提交的代码版本)
Head（指向当前所使用的分支）
Dev（测试版本）


创建新分支
切换分支
合并分支
删除分支

分支管理操作
创建命令：git branch 分支名
切换命令：git checkout 分支名
查看文件ls
查看分支列表：git branch
{不同分支是平行的关系，不会相互影响}

合并分支：git merge 分支名
删除分支：git branch -d 分支名


远程仓库

工作流程：push把本地内容推送到远程仓库
	clone将远程仓库的内容复制到本地仓库
	pull拉取操作（更新远程仓库中新的内容）


远程仓库平台
github：
https://github.com
码云：
https://gitee.com



情况1：有本地仓库，无远程仓库

（1）创建远程仓库（推送代码之前需要先配置SSH公钥{
					1设置git账户[git config user.name(查看git账户)；git config user.email(查看git邮箱)]
                                                                               		     git config --global user.name "账户名"  ；git config --global user.emal "邮箱"（设置全局的账户名和邮箱）
                                                                                                     cd ~/.ssh(查看是否生成过SSH公钥)
       					2生成ssh公钥      ssh-keygen -t rsa -C "邮箱"         查看cat ~/.ssh/id_rsa.pub
					3设置账户公钥 将pub中的ssh-rsa ————邮箱中的内容复制到github中ssh设置中
						（ssh -T git@github.com）
(2)推送到远程仓库1.为远程仓库URL，自定义仓库名称
		2.推送【命令git remote add 远程名称 远程仓库URL
					|  	   |
					|                  在github上直接复制
					|
					自己设置一个远程仓库名称

			     git push -u 仓库名称 分支名                】
							}）


情况2：有远程仓库，无本地仓库

1将远程仓库的代码，克隆到本地仓库

	克隆命令：git clone 仓库地址

2.创建新文件，添加并提交到本地仓库
3.推送至远程仓库
4.项目拉取更新
	拉取命令：git pull 远程仓库名 分支名


代码冲突

提交之前先执行一次pull命令   cat可以查看文件



IDEA配置Git

历史版本切换
reset版本回退（会抛弃原来的提交记录）
revert版本回退（进行代码冲突处理）会把回退操作看成一次新的提交记录，好处在于不会抛弃原来的提交记录。

分支管理

创建并切换分支











